spring:
  config:
    activate:
      on-profile: common

  kafka:
    template:
      default-topic: lastOrdersTopic
    consumer:
      group-id: notificationServiceGroupID
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            type:
              mapping: event:com.fiolekp.notificationservice.event.NewOrderEvent

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

logging:
  level:
    root: INFO

server:
  port: 8777


---
spring:
  config:
    activate:
      on-profile: local-env

  kafka:
    bootstrap-servers: localhost:9092


---
spring:
  config:
    activate:
      on-profile: docker-env-basic

  kafka:
    bootstrap-servers: kafka-broker-basic:9092


---
spring:
  config:
    activate:
      on-profile: docker-env-ly

  kafka:
    bootstrap-servers: kafka-broker-ly:9092


---
spring:
  config:
    activate:
      on-profile: docker-env-msb

  kafka:
    bootstrap-servers: kafka-broker-msb:9092



